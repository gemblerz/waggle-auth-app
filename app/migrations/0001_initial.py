# Generated by Django 4.1.1 on 2022-09-14 15:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vsn",
                    models.CharField(max_length=10, unique=True, verbose_name="VSN"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProfileMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "can_schedule",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether user can schedule.",
                        verbose_name="Schedule?",
                    ),
                ),
                (
                    "can_develop",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether user has developer access.",
                        verbose_name="Develop?",
                    ),
                ),
                (
                    "can_access_files",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether user has file access.",
                        verbose_name="Files?",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.profile"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.project"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="profile",
            name="projects",
            field=models.ManyToManyField(
                through="app.ProfileMembership", to="app.project"
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="NodeMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "can_schedule",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether node allows scheduling.",
                        verbose_name="Schedule?",
                    ),
                ),
                (
                    "can_develop",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether node allows developer access.",
                        verbose_name="Develop?",
                    ),
                ),
                (
                    "can_access_files",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether node allows file access.",
                        verbose_name="Files?",
                    ),
                ),
                (
                    "node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.node"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.project"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="node",
            name="projects",
            field=models.ManyToManyField(
                through="app.NodeMembership", to="app.project"
            ),
        ),
        migrations.AddConstraint(
            model_name="profilemembership",
            constraint=models.UniqueConstraint(
                models.F("profile"),
                models.F("project"),
                name="app_profilemembership_uniq",
            ),
        ),
        migrations.AddConstraint(
            model_name="nodemembership",
            constraint=models.UniqueConstraint(
                models.F("node"), models.F("project"), name="app_nodemembership_uniq"
            ),
        ),
    ]
